# Summary:
# This workflow is named "Java CI Testing with Maven" and is responsible for running test cases for a Java application using Maven.
#
# Trigger Events:
# - It is triggered on pull requests to the 'main' branch.
#
# Jobs:
# - The job "Test Java Application" runs on an Ubuntu machine and performs the following steps:
#   1. Checkout code: Pulls the latest code from the repository.
#   2. Setup Oracle JDK: Installs Oracle JDK 21.0.1.
#   3. Set Application Properties for Testing: Configures environment variables from secret properties for the Spring Boot application during testing.
#   4. Run Test Cases: Executes the test cases defined in the Maven project.

name: Java CI Testing with Maven

on:
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test Java Application
    runs-on: ubuntu-latest
    environment: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Oracle JDK 21.0.1
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: 21
          version: 21.0.1

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Test Cases
        env:
          SPRING_DATASOURCE_URL_TEST: ${{ secrets.SPRING_DATASOURCE_URL_TEST }} # env secret
          SPRING_DATASOURCE_DRIVER_CLASS_NAME_TEST: ${{ vars.SPRING_DATASOURCE_DRIVER_CLASS_NAME_TEST }} # env variable
          SPRING_DATASOURCE_USERNAME_TEST: ${{ secrets.SPRING_DATASOURCE_USERNAME_TEST }} # env secret
          SPRING_DATASOURCE_PASSWORD_TEST: ${{ secrets.SPRING_DATASOURCE_PASSWORD_TEST }} # env secret
          SPRING_JPA_DATABASE_PLATFORM_TEST: ${{ vars.SPRING_JPA_DATABASE_PLATFORM_TEST }} # env variable
          SPRING_JPA_HIBERNATE_DDL_AUTO_TEST: ${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO_TEST }} # env variable
          SPRING_JPA_SHOW_SQL_TEST: ${{ vars.SPRING_JPA_SHOW_SQL_TEST }} # env variable
          LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_TEST: ${{ vars.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_TEST }} # env variable
          LOGGING_LEVEL_COM_CLOUDCOMPUTING_MOVIERETRIEVALWEBAPP_TEST: ${{ vars.LOGGING_LEVEL_COM_CLOUDCOMPUTING_MOVIERETRIEVALWEBAPP_TEST }} # env variable

        run: mvn test --file pom.xml
