# Summary:
# This workflow is named "Java CI Testing with Maven" and is responsible for running test cases for a Java application using Maven.
#
# Trigger Events:
# - It is triggered on pull requests to the 'main' branch.
#
# Jobs:
# - The job "Test Java Application" runs on an Ubuntu machine and performs the following steps:
#   1. Checkout code: Pulls the latest code from the repository.
#   2. Setup Oracle JDK: Installs Oracle JDK 21.0.1.
#   3. Set Application Properties for Testing: Configures environment variables from secret properties for the Spring Boot application during testing.
#   4. Run Test Cases: Executes the test cases defined in the Maven project.

name: Java CI Testing with Maven

on:
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

jobs:
  test:
    name: Test Java Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Oracle JDK 21.0.1
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: 21
          version: 21.0.1

      - name: Set Applicatioon Properties for Testing
        run: |
          echo "spring.datasource.url=${{ secrets.SPRING_DATASOURCE_URL_TEST }}" >> $GITHUB_ENV
          echo "spring.datasource.driver-class-name=${{ secrets.SPRING_DATASOURCE_DRIVER_CLASS_NAME_TEST }}" >> $GITHUB_ENV
          echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME_TEST }}" >> $GITHUB_ENV
          echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD_TEST }}" >> $GITHUB_ENV
          echo "spring.jpa.database-platform=${{ secrets.SPRING_JPA_DATABASE_PLATFORM }}" >> $GITHUB_ENV
          echo "spring.jpa.hibernate.ddl-auto=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO_TEST }}" >> $GITHUB_ENV
          echo "spring.jpa.show-sql=${{ secrets.SPRING_JPA_SHOW_SQL_TEST }}" >> $GITHUB_ENV
          echo "logging.level.org.springframework=${{ secrets.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_TEST }}" >> $GITHUB_ENV
          echo "logging.level.com.cloudcomputing.movieRetrievalWebApp=${{ secrets.LOGGING_LEVEL_COM_CLOUDCOMPUTING_MOVIERETRIEVALWEBAPP }}" >> $GITHUB_ENV

      - name: Run Test Cases
        run: mvn test --file pom.xml
