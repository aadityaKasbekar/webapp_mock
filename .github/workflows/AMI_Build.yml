name: Building AMI
on:
  pull_request:
    types: [closed]

env:
  PRODUCT_VERSION: "1.11.2"

jobs:
  build_AMI:
    if: github.event.pull_request.merged == true
    name: Building AMI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Oracle JDK 21.0.1
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: 21
          version: 21.0.1

      - name: Set Application Properties for Building
        run: |
          echo "spring.application.name=${{ secrets.SPRING_APPLICATION_NAME }}" >> $GITHUB_ENV
          echo "spring.datasource.url=${{ secrets.SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
          echo "spring.datasource.driver-class-name=${{ secrets.SPRING_DATASOURCE_DRIVER_CLASS_NAME }}" >> $GITHUB_ENV
          echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
          echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
          echo "spring.jpa.hibernate.ddl-auto=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}" >> $GITHUB_ENV
          echo "spring.jpa.show-sql=${{ secrets.SPRING_JPA_SHOW_SQL }}" >> $GITHUB_ENV
          echo "logging.level.com.cloudcomputing.movieRetrievalWebApp.package=${{ secrets.LOGGING_LEVEL_COM_CLOUDCOMPUTING_MOVIERETRIEVALWEBAPP_PACKAGE }}" >> $GITHUB_ENV
          echo "logging.level.org.springframework=${{ secrets.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK }}" >> $GITHUB_ENV
          echo "logging.level.org.springframework.boot.devtools=${{ secrets.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT_DEVTOOLS }}" >> $GITHUB_ENV
          echo "logging.level.org.hibernate=${{ secrets.LOGGING_LEVEL_ORG_HIBERNATE }}" >> $GITHUB_ENV
          echo "logging.level.com.zaxxer.hikari=${{ secrets.LOGGING_LEVEL_COM_ZAXXER_HIKARI }}" >> $GITHUB_ENV
          echo "logging.level.root=${{ secrets.LOGGING_LEVEL_ROOT }}" >> $GITHUB_ENV

      - name: Building Spring Boot Application run `mvn clean install --file pom.xml`
        run: mvn clean install --file pom.xml

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Run `packer init`
        id: init
        run: "packer init cloudNativeAppAMI.pkr.hcl"

      - name: Run `packer fmt`
        id: fmt
        run: "packer fmt cloudNativeAppAMI.pkr.hcl"

      - name: Run `packer validate`
        id: validate
        run: "packer validate cloudNativeAppAMI.pkr.hcl"

      - name: Run `packer build`
        id: validate
        run: "packer build cloudNativeAppAMI.pkr.hcl"